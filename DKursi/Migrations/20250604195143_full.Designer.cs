// <auto-generated />
using System;
using DKursi.Core.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DKursi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250604195143_full")]
    partial class full
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DKursi.Core.Data.Entities.Artikuj", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Cmimi")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Emri")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("KategoriaId")
                        .HasColumnType("int");

                    b.Property<int>("SasiaNeStok")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KategoriaId");

                    b.ToTable("Produktet", (string)null);
                });

            modelBuilder.Entity("DKursi.Core.Data.Entities.Fatura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int>("TavolinaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TavolinaId");

                    b.ToTable("Faturat", (string)null);
                });

            modelBuilder.Entity("DKursi.Core.Data.Entities.FaturaProdukti", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FaturaId")
                        .HasColumnType("int");

                    b.Property<int>("ProduktiId")
                        .HasColumnType("int");

                    b.Property<int>("Sasia")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FaturaId");

                    b.HasIndex("ProduktiId");

                    b.ToTable("FaturaProduktet", (string)null);
                });

            modelBuilder.Entity("DKursi.Core.Data.Entities.Kategoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Emri")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Kategorite", (string)null);
                });

            modelBuilder.Entity("DKursi.Core.Data.Entities.Tavolina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Tavolina", (string)null);
                });

            modelBuilder.Entity("DKursi.Core.Data.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("DKursi.Core.Data.Entities.Artikuj", b =>
                {
                    b.HasOne("DKursi.Core.Data.Entities.Kategoria", "Kategoria")
                        .WithMany("Artikull")
                        .HasForeignKey("KategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kategoria");
                });

            modelBuilder.Entity("DKursi.Core.Data.Entities.Fatura", b =>
                {
                    b.HasOne("DKursi.Core.Data.Entities.Tavolina", "Tavolina")
                        .WithMany()
                        .HasForeignKey("TavolinaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tavolina");
                });

            modelBuilder.Entity("DKursi.Core.Data.Entities.FaturaProdukti", b =>
                {
                    b.HasOne("DKursi.Core.Data.Entities.Fatura", "Fatura")
                        .WithMany("Produktet")
                        .HasForeignKey("FaturaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DKursi.Core.Data.Entities.Artikuj", "Artikuj")
                        .WithMany()
                        .HasForeignKey("ProduktiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artikuj");

                    b.Navigation("Fatura");
                });

            modelBuilder.Entity("DKursi.Core.Data.Entities.Fatura", b =>
                {
                    b.Navigation("Produktet");
                });

            modelBuilder.Entity("DKursi.Core.Data.Entities.Kategoria", b =>
                {
                    b.Navigation("Artikull");
                });
#pragma warning restore 612, 618
        }
    }
}
